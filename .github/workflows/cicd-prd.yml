name: "CICD production"

on:
  # On merged
  push:
    branches:
      - main
  workflow_dispatch:
  # On released
  release:
    types: [published]

jobs:
  build-docker:
    permissions:
      id-token: write
      contents: write
    runs-on: ubuntu-22.04
    if: github.actor != 'dependabot[bot]'
    name: "Deploy image"
    strategy:
      fail-fast: false
      matrix:
        application: [zilliqa-bridge-validator]
        include:
          - application: zilliqa-bridge-validator
            image_name: zilliqa-bridge-validator
            path: bridge-validators
            tag_length: 8
            tag_latest: false
    env:
      DOCKER_DOMAIN: asia-docker.pkg.dev
      REGISTRY: asia-docker.pkg.dev/prj-p-devops-services-tvwmrf63/zilliqa-public
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          fetch-depth: 0

      - name: Docker build and push - production
        uses: Zilliqa/gh-actions-workflows/actions/ci-dockerized-app-build-push@v2
        with:
          context: ${{ matrix.path }}
          push: true
          tag: asia-docker.pkg.dev/prj-p-devops-services-tvwmrf63/zilliqa-public/${{ matrix.image_name }}:${{ github.ref_name }}
          registry: asia-docker.pkg.dev
          workload-identity-provider: "${{ secrets.GCP_PRD_GITHUB_WIF }}"
          service-account: "${{ secrets.GCP_PRD_GITHUB_SA_DOCKER_REGISTRY }}"
          cache-key: ${{ env.REGISTRY }}/${{ matrix.image_name }}-cache
          build-args: |
            DEPLOY_ENV=prd
            VITE_ENV="PROD"

  build-makefile:
    permissions:
      id-token: write
      contents: write
    runs-on: ubuntu-22.04
    name: "Build image with Makefile"
    strategy:
      fail-fast: false
      matrix:
        application: [zilliqa-bridge-web]
        include:
          - application: zilliqa-bridge-web
            image_name: zilliqa-bridge-web
            path: bridge-web
            tag_length: 8
            tag_latest: false
    env:
      DOCKER_DOMAIN: asia-docker.pkg.dev
      REGISTRY: asia-docker.pkg.dev/prj-p-devops-services-tvwmrf63/zilliqa-public
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          fetch-depth: 0

      - name: "Authenticate to Google Cloud - production"
        id: google-auth
        uses: "google-github-actions/auth@v1"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.GCP_PRD_GITHUB_WIF }}"
          service_account: "${{ secrets.GCP_PRD_GITHUB_SA_DOCKER_REGISTRY }}"
          create_credentials_file: true

      - name: Login to the registry - production
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_DOMAIN }}
          username: "oauth2accesstoken"
          password: "${{ steps.google-auth.outputs.access_token }}"

      - name: Get tag version - production
        if: github.event_name == 'push'
        id: set-tag
        uses: Zilliqa/gh-actions-workflows/actions/generate-tag@v1
        with:
          tag: ${{ env.REGISTRY }}/${{ matrix.image_name }}
          length: ${{ matrix.tag_length }}

      - name: "Build and push ${{ matrix.application }} - production"
        if: github.event_name == 'push'
        env:
          ENVIRONMENT: prd
          IMAGE_TAG: ${{ steps.set-tag.outputs.tags }}
          ENV_FILES_DECRYPTER_NONPRD: ${{ secrets.ENV_FILES_DECRYPTER_NONPRD }}
          ENV_FILES_DECRYPTER_PRD: ${{ secrets.ENV_FILES_DECRYPTER_PRD }}
        run: |
          cd ${{ matrix.path }}
          make image/build-and-push

      - name: "Build and push ${{ matrix.application }} - production"
        if: github.event_name == 'release'
        env:
          ENVIRONMENT: prd
          IMAGE_TAG: ${{ env.REGISTRY }}/${{ matrix.image_name }}:${{ github.ref_name }}
          ENV_FILES_DECRYPTER_NONPRD: ${{ secrets.ENV_FILES_DECRYPTER_NONPRD }}
          ENV_FILES_DECRYPTER_PRD: ${{ secrets.ENV_FILES_DECRYPTER_PRD }}
        run: |
          cd ${{ matrix.path }}
          make image/build-and-push

      - name: "Build and push ${{ matrix.application }} tag latest - production"
        if: matrix.tag_latest == true && github.event_name == 'release'
        env:
          ENVIRONMENT: prd
          IMAGE_TAG: ${{ env.REGISTRY }}/${{ matrix.image_name }}:latest
          ENV_FILES_DECRYPTER_NONPRD: ${{ secrets.ENV_FILES_DECRYPTER_NONPRD }}
          ENV_FILES_DECRYPTER_PRD: ${{ secrets.ENV_FILES_DECRYPTER_PRD }}
        run: |
          cd ${{ matrix.path }}
          make image/build-and-push
